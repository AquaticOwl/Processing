int stackHeight;
int fps = 10;
int k = 0;
int n = 1;
int[] medians = new int[1200];
int[] areas = {1,1,1,1,1,1,5,12,1,1,1,1,8,16,4,9,1,9,4,1,1,1,4,10,5,18,12,4,5,10,4,16,5,9,12,12,4,10,9,12,8,16,6,4,1,10,3,16,6,10,1,16,6,3,16,4,18,4,8,16,8,3,9,1,5,10,4,12,4,18,4,12,16,10,8,18,3,4,8,2,15,6,2,5,8,5,8,4,12,16,3,5,16,3,6,18,4,6,9,12};
 
 void setup() {
   size(1000, 900);
 }
 
 void draw() {
   int[] sampleAreas = new int[n];
   frameRate(fps);
   background(255, 255, 200);
   fill(150);
   line(0, height * 7/8, width, height * 7/8);
   
   //Title
   textSize(52);
   fill(255, 100, 0);
   text("Rectangle Sampling Distribution", width * 1/6, height/10);
   
   //x-axis
   textSize(40);
   fill(0);
   text("Sample Mean (n=" + n + ")", width/4 + 25, height * 0.95);
   textSize(15);
   text("Press Up or Down to change n! (Click on the window to give it focus)", width/4 + 25, height * 0.98);
   for (int i = 0; i <= 20; i++) {
     line(width * i / 25 + 90, height * 7/8 -10, width * i/25 + 90, height * 7/8 + 10);
     text(i, width * i /25 + 87, height * 7/8 + 24);
   }
   line(73, 0, 73, height);
   
   //y-axis
   textSize(40);
   fill(0);
   text("Freq", width/100, height/12);
   textSize(15);
   for (int i = 0; i <= 35; i++) {
     text(i * 10, 20, height * 7/8 - i * 20 + 5);
     line(63, height * 7/8 - i * 20, 83, height * 7/8 - i * 20);
   }
   
   for (int i = 0; i < n; i++) {
     sampleAreas[i] = areas[int(random(0, 100))];
   }
     sampleAreas = sort(sampleAreas);
     if(n % 2 == 1) {
     medians[k] = sampleAreas[floor(n/2)]; }
     else {
       medians[k] = (sampleAreas[n/2] + sampleAreas[n/2 - 1]) / 2; }
   
     for (int j = 0; j < 20; j++) {
       stackHeight = 0;
       for (int area : medians) {
         if (area == j & area != 0) {
           stackHeight++;
         }
       }
       fill(150);
       rect(width * j / 25 + 78, height * 7/8 - (stackHeight * 2), 24, stackHeight * 2); 
       fill(0);
   }
   fps += 1;
   if (k < 1199) {
    k++;
   }
 }
 void keyReleased() {
  if(key == CODED) {  
   if(keyCode == UP) {
       n++;
       k = 0;
       medians = new int[1200];
       }
   if(keyCode == DOWN & n > 1) {
       n--;
       k = 0;
       medians = new int[1200];
       }
     }
 }
