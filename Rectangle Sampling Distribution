int stackHeight;
int fps = 10;
int k = 0;
int[] medians = new int[1200];
int[] sampleAreas = new int[5];
int[] areas = {1,1,1,1,1,1,5,12,1,1,1,1,8,16,4,9,1,9,4,1,1,1,4,10,5,18,12,4,5,10,4,16,5,9,12,12,4,10,9,12,8,16,6,4,1,10,3,16,6,10,1,16,6,3,16,4,18,4,8,16,8,3,9,1,5,10,4,12,4,18,4,12,16,10,8,18,3,4,8,2,15,6,2,5,8,5,8,4,12,16,3,5,16,3,6,18,4,6,9,12};
 
 void setup() {
   size(600, 800);
 }
 void draw() {
   frameRate(fps);
   background(255);
   fill(0);
   line(0, height * 3/4, width, height * 3/4);
   for (int i = 0; i <= 20; i++) {
     line(width * i / 25 + 65, height * 3/4 -10, width * i/25 + 65, height * 3/4 + 10);
     text(i, width * i /25 + 62, height * 3/4 + 24);
   }
   line(30, 0, 30, height);
   for (int i = 0; i <= 29; i++) {
     text(i * 10, 2, 605 - i * 20);
     line(20, 600 - i * 20, 40, 600 - i * 20);
     
     
   }
     sampleAreas[0] = areas[int(random(0, 100))];
     sampleAreas[1] = areas[int(random(0, 100))];
     sampleAreas[2] = areas[int(random(0, 100))];
     sampleAreas[3] = areas[int(random(0, 100))];
     sampleAreas[4] = areas[int(random(0, 100))];
     sampleAreas = sort(sampleAreas);
     medians[k] = sampleAreas[2];
   
     for (int j = 0; j < 20; j++) {
       stackHeight = 0;
       for (int area : medians) {
         if (area == j & area != 0) {
           stackHeight++;
         }
       }
       rect(width * j / 25 + 53, 600 - (stackHeight * 2), 24, stackHeight * 2); 
   }
   k++;
   fps += 1;
   if (k == 1200) {
    noLoop();
   }
 }
